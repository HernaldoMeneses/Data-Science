----------------------------------
Timestamp: 16:21:37.464
SELECT CABECALHO.NUMNOTA
     , CABECALHO.NUMTRANSENT
     , CABECALHO.NUMTRANSORIGEM
     , CABECALHO.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , CABECALHO.CODFILIAL
     , NVL(CABECALHO.VLTOTAL, 0) VLTOTAL
     , CABECALHO.SERIE
     , CABECALHO.ESPECIE
     , NVL(CABECALHO.RESTRINGIRCREDICMSTV10,'N') RESTRINGIRCREDICMSTV10
     , NVL(CABECALHO.GERANFVENDA,'N') GERANFVENDA
     , CABECALHO.DTENT
     , CABECALHO.CODFISCAL
     , CABECALHO.CODCONT
     , CABECALHO.DTEMISSAO
     , CABECALHO.DTSAIDA
     , CABECALHO.TIPODESCARGA
     , CABECALHO.ROTINALANC
     , CABECALHO.CODENTVEICULO
     , CABECALHO.FUNCLANC
     , CABECALHO.CODFUNCLANC
     , NVL(CABECALHO.PERCALTERCUSTOENT, 0) PERCALTERCUSTOENT
     , PCEMPR.NOME FUNCIONARIOLANC
     , CABECALHO.CODFORNECFRETE
     , PCTRANSPORTE.FORNECEDOR TRANSPORTADORA
     , NVL(CABECALHO.VLIPI,0) VLIPI
     , NVL(CABECALHO.VLBASEIPI,0) VLBASEIPI
     , NVL(CABECALHO.VLDESCFIN,0) VLDESCFIN
     , NVL(CABECALHO.VLFRETE,0) VLFRETE
     , NVL(CABECALHO.TIPOFRETECIFFOB,'C') TIPOFRETECIFFOB
     , NVL(CABECALHO.VLDESCONTO, 0) VLDESCONTO
     , NVL(CABECALHO.BASEICST, 0) BASEICST
     , NVL(CABECALHO.VLST, 0) VLST
     , NVL(CABECALHO.VLICMS, 0) VLICMS
     , NVL(CABECALHO.VLISENTAS, 0) VLISENTAS
     , NVL(CABECALHO.VLBONIFIC, 0) VLBONIFIC
     , CABECALHO.OBS
     , CABECALHO.OBS1
     , CABECALHO.OBS2
     , PCFORNEC.OBS FORNECOBS          
     , PCFORNEC.OBS2 FORNECOBS2
     , PCFORNEC.OBSERVACAO FORNECOBSERVACAO
     , PCFORNEC.ENDER
     , PCFORNEC.CGC
     , PCFORNEC.CIDADE
     , PCFORNEC.ESTADO
     , PCFORNEC.TELFAB
     , PCFORNEC.TELREP
     , PCFORNEC.FAXREP
     , PCFORNEC.FAXFAB
     , PCFORNEC.TELEXREP     
     , PCFORNEC.TELEXFAB
     , PCFORNEC.TELCOB
     , PCFORNEC.TELEFONECOM     
     , PCFORNEC.TELEFONEADM
     , CABECALHO.NUMBONUS                                                                        
     , CABECALHO.NUMVOL           
     , CABECALHO.NUMDIIMPORTACAO
     , NVL(CABECALHO.TOTPESOLIQ,0) TOTPESOLIQ
     , DECODE(CABECALHO.TIPODESCARGA, 'F', 0, NVL(CABECALHO.VLSISCOMEX,     0)) VLSISCOMEXNF
     , DECODE(CABECALHO.TIPODESCARGA, 'F', 0, NVL(CABECALHO.VLADUANEIRA,    0)) VLADUANEIRANF
     , DECODE(CABECALHO.TIPODESCARGA, 'F', 0, NVL(CABECALHO.VLOUTRASDESPIMP,0)) VLOUTRASDESPIMPNF     
     , PCCONSUM.DTPROXATU
     , PCCONSUM.TX TXDIA
     , POWER(PCCONSUM.TX,30) TXMES
     , CASE WHEN ((NVL(PCCONSUM.PRECOPOREMBALAGEM,'N') = 'S') AND (NVL(PCFILIAL.AUTOSERVICO,'N') = 'S') AND 
(NVL(PCFILIAL.PRECOPOREMBALAGEM,'N') = 'S'))
            THEN 'S'
            ELSE 'N'
       END PRECOPOREMBALAGEM
     , NVL(CABECALHO.TOTPESO,0) TOTPESO                                                                        
     , SUM(NVL(ITENS.PUNIT,0) * (DECODE(NVL(ITENS.QT,0),0, ITENS.QTCONT, ITENS.QT))) VLTOTPUNIT                                                                   
     , COUNT(ITENS.CODPROD) TOTALITENS
     , SUM(NVL(ITENS.VLBONIFIC,0)       * (DECODE(NVL(ITENS.QT,0),0, ITENS.QTCONT, ITENS.QT))) VLBONDINHEIRO
     , ROUND(SUM((NVL(ITENS.PUNIT,0) - (NVL(ITENS.PUNIT,0) / (1+(NVL(ITENS.PERCBON,0)/100))))      *
                 (DECODE(NVL(ITENS.QT,0),0, ITENS.QTCONT, ITENS.QT))),6) VLBONMERCADORIA
     , ROUND(SUM((NVL(ITENS.PUNIT,0) * (NVL(ITENS.PERCBONOUTRAS,0)/100))      *
                 (DECODE(NVL(ITENS.QT,0),0, ITENS.QTCONT, ITENS.QT))),6) VLBONOUTRAS
     , CASE WHEN SUM(NVL(ITENS.PERICMGUIAPROPRIA,0)) > 0 
            THEN ''
            ELSE '** NF C/GUIA PROPRIA DE ICMS **'
       END NFCOMGUIAPROPRIAICMS
     , PCBONUSC.DTMONTAGEM
     , PCBONUSC.DTFECHAMENTOTOTAL
     , CASE
          WHEN((PCFILIAL.CONTROLENFEPORSERIE = 'S') AND(NVL(CABECALHO.CONSUMIUNUMNFE, 'N') = 'N'))
             THEN 'S'
          ELSE 'N'
       END NFPROVISORIO 
     , NVL(CABECALHO.CALCREDPISSERVICO, 'N') CALCREDPISSERVICO
     , NVL(CABECALHO.CALCREDPISSERVICOCONT, 'N') CALCREDPISSERVICOCONT
     , CABECALHO.CALCCREDICMS
     , CABECALHO.CALCCREDICMCUSTOCONT
     , CABECALHO.CALCCREDPISCOFINS
     , CABECALHO.CALCCREDPISCUSTOCONT
     , CABECALHO.REBAIXACUSTOCOMDESCFIN   
     , CABECALHO.NUMTRANSORIGEM
     , PCCONSUM.NUMREGIAOPADRAO
     , NVL(CABECALHO.CONSPOLITICATRIBUTNOTAH, 'N') CONSPOLITICATRIBUTNOTAH
     , NVL(CABECALHO.DEDUZIRICMSBASEPISCOFINS, 'N') DEDUZIRICMSBASEPISCOFINS
     , NVL(PARAMFILIAL.OBTERCOMOVARCHAR2('PRECIFICREGIAOFORAUFSEMST'), 'N') PRECIFICREGIAOFORAUFSEMST
     , CABECALHO.VERSAOROTINA
     , NVL(CABECALHO.IMPORTADOXML,'N') IMPORTADOXML
     , SUM(NVL(ITENSC.VLICMSDESONERACAO, 0) * (DECODE(NVL(ITENS.QT, 0), 0, ITENS.QTCONT, ITENS.QT))) VLICMSDESONERACAO 
     , NVL(CABECALHO.REMESSACOMBENEFIC,'N')REMESSACOMBENEFIC
     , CABECALHO.ORIGEMCUSTOTRANSF ORIGEMCUSTOTRANSF
  FROM PCNFENT CABECALHO
     , PCFORNEC
     , PCEMPR
     , PCFORNEC PCTRANSPORTE
     , PCCONSUM
     , PCMOV ITENS
     , PCMOVCOMPLE ITENSC
     , PCPEDIDO
     , PCFILIAL 
     , PCBONUSC
 WHERE (((CABECALHO.CODFORNEC      = PCFORNEC.CODFORNEC
   AND CABECALHO.CODFUNCLANC    = PCEMPR.MATRICULA(+)
   AND CABECALHO.CODFORNECFRETE = PCTRANSPORTE.CODFORNEC(+)
   AND ((CABECALHO.CODCONT = NVL(CABECALHO.CODCONTFOR,PCCONSUM.CODCONTFOR)) OR
       (CABECALHO.CODCONT = PCCONSUM.CODCONTAJUSTEEST AND CABECALHO.TIPODESCARGA = '4') OR
       (CABECALHO.TIPODESCARGA = 'S' AND ((CABECALHO.ESPECIE = 'NF') OR (CABECALHO.ESPECIE = 'NE'))))
   AND CABECALHO.NUMTRANSENT    = ITENS.NUMTRANSENT
   AND CABECALHO.CODFILIAL      = ITENS.CODFILIAL
   AND ITENS.NUMTRANSITEM       = ITENSC.NUMTRANSITEM
   AND CABECALHO.NUMBONUS       = PCBONUSC.NUMBONUS(+)
   AND ITENS.NUMPED             = PCPEDIDO.NUMPED(+)
   AND PCFILIAL.CODIGO          = CABECALHO.CODFILIAL
   AND CABECALHO.TIPODESCARGA  IN ('1','2','3','4','5','9','R','S','A','E','N','I','F', 'D', 'B', 'M', 'G', 'H', 'J')
   AND ((CABECALHO.VLTOTAL > 0) OR (CABECALHO.VLTOTAL >= 0 AND CABECALHO.TIPODESCARGA = 'G') OR (CABECALHO.TIPODESCARGA = 'R' 
AND CABECALHO.NFBRINDE = 'S')) /*Descarga tipo G nem sempre tem valor total de NF*/
   AND ITENS.DTCANCEL          IS NULL) AND PCFILIAL.CODIGO = :CODFILIAL) AND ITENS.DTMOV BETWEEN :DTENTINICIO AND :DTENTFIM) 
AND CABECALHO.DTENT BETWEEN :DTENTINICIO AND :DTENTFIM   
 GROUP
    BY CABECALHO.NUMNOTA
     , CABECALHO.NUMTRANSENT
     , CABECALHO.NUMTRANSORIGEM
     , PCFILIAL.CONTROLENFEPORSERIE 
     , CABECALHO.CONSUMIUNUMNFE
     , CABECALHO.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , CABECALHO.CODFILIAL
     , CABECALHO.VLTOTAL
     , CABECALHO.SERIE
     , CABECALHO.ESPECIE
     , CABECALHO.DTENT
     , CABECALHO.CODFISCAL
     , CABECALHO.CODCONT
     , CABECALHO.GERANFVENDA
     , CABECALHO.DTEMISSAO
     , CABECALHO.DTSAIDA
     , CABECALHO.TIPODESCARGA
     , CABECALHO.ROTINALANC
     , CABECALHO.CODENTVEICULO
     , CABECALHO.FUNCLANC
     , CABECALHO.CODFUNCLANC
     , CABECALHO.PERCALTERCUSTOENT
     , PCEMPR.NOME 
     , CABECALHO.CALCREDPISSERVICO
     , CABECALHO.CALCREDPISSERVICOCONT     
     , CABECALHO.CODFORNECFRETE
     , PCTRANSPORTE.FORNECEDOR 
     , CABECALHO.VLIPI
     , CABECALHO.VLBASEIPI
     , CABECALHO.VLDESCFIN
     , CABECALHO.VLFRETE
     , CABECALHO.TIPOFRETECIFFOB
     , CABECALHO.VLDESCONTO
     , CABECALHO.VLST
     , CABECALHO.BASEICST
     , CABECALHO.VLICMS
     , CABECALHO.VLISENTAS
     , CABECALHO.VLBONIFIC
     , CABECALHO.OBS
     , CABECALHO.OBS1
     , CABECALHO.OBS2
     , PCFORNEC.OBS
     , PCFORNEC.OBS2
     , PCFORNEC.OBSERVACAO
     , PCFORNEC.ENDER
     , PCFORNEC.CGC
     , PCFORNEC.CIDADE
     , PCFORNEC.ESTADO
     , PCFORNEC.TELFAB
     , PCFORNEC.TELREP
     , PCFORNEC.FAXREP
     , PCFORNEC.FAXFAB
     , PCFORNEC.TELEXREP     
     , PCFORNEC.TELEXFAB
     , PCFORNEC.TELCOB
     , PCFORNEC.TELEFONECOM     
     , PCFORNEC.TELEFONEADM
     , CABECALHO.NUMBONUS                                                                        
     , CABECALHO.NUMVOL                                                                          
     , PCCONSUM.DTPROXATU
     , PCCONSUM.TX
     , CABECALHO.NUMDIIMPORTACAO
     , CABECALHO.TOTPESOLIQ
     , PCCONSUM.TX
     , CABECALHO.TOTPESO
     , PCCONSUM.PRECOPOREMBALAGEM
     , PCFILIAL.AUTOSERVICO
     , PCFILIAL.PRECOPOREMBALAGEM
     , CABECALHO.VLSISCOMEX
     , CABECALHO.VLADUANEIRA
     , CABECALHO.VLOUTRASDESPIMP
     , PCBONUSC.DTMONTAGEM
     , PCBONUSC.DTFECHAMENTOTOTAL 
     , CABECALHO.CALCCREDICMS
     , CABECALHO.CALCCREDICMCUSTOCONT
     , CABECALHO.CALCCREDPISCOFINS
     , CABECALHO.CALCCREDPISCUSTOCONT
     , CABECALHO.REBAIXACUSTOCOMDESCFIN
     , CABECALHO.NUMTRANSORIGEM 
     , PCCONSUM.NUMREGIAOPADRAO 
     , CABECALHO.VERSAOROTINA 
     , CABECALHO.IMPORTADOXML
     , CABECALHO.CONSPOLITICATRIBUTNOTAH
     , NVL(CABECALHO.DEDUZIRICMSBASEPISCOFINS, 'N')
     , CABECALHO.RESTRINGIRCREDICMSTV10
     , NVL(CABECALHO.REMESSACOMBENEFIC,'N')
     , CABECALHO.ORIGEMCUSTOTRANSF     
ORDER BY CABECALHO.NUMTRANSENT
CODFILIAL = '2'
DTENTINICIO = '01/01/2024'
DTENTFIM = '31/01/2024 23:59:59'
----------------------------------
Timestamp: 16:21:37.902
SELECT  ITENS.ROWID 
        , ITENS.NUMPED 
        , ITENS.NUMTRANSENT 
        , ITENS.NUMLOTE 
        , ITENS.NUMLOTEFAB 
        , PCPRODUT.NUMORIGINAL 
        , ITENS.QTSALDOESTGER 
        , NVL(PCPRODUT.PRECIFICESTRANGEIRA, 'N') PRECIFICESTRANGEIRA 
        , NVL(PCCOTACAOMOEDAI.COTACAO, 0) COTACAO 
        , ITENS.CODPROD 
        , ITENS.PLIQPED 
        , NVL(ITENS.DESCRICAO,PCPRODUT.DESCRICAO) DESCRICAO 
        , ITENS.NUMSEQ 
        , PCEMBALAGEM.PTABELA PTABELAEMBALAGEM 
        , PCEMBALAGEM.POFERTA POFERTAEMBALAGEM 
        , PCEMBALAGEM.MARGEMIDEALATAC 
        , PCPRODUT.EMBALAGEM 
        , PCPRODUT.CODEPTO 
        , PCPRODUT.CODSEC 
        , PCPRODUT.UNIDADE 
        , ITENS.ST 
        , ITENS.VLIPI 
        , ITENS.VLCREDICMS 
        , COMPLEMENTO.PERPISBKP PERPIS 
        , COMPLEMENTO.PERCOFINSBKP PERCOFINS 
        , COMPLEMENTO.VLCREDPISBKP VLCREDPIS 
        , COMPLEMENTO.VLCREDCOFINSBKP VLCREDCOFINS 
        , NVL(ITENS.VLDIFPUNITCONT, 0) VLDIFPUNITCONT 
        , DECODE(NVL(ITENS.PUNIT, 0), 0, ITENS.PUNITCONT, ITENS.PUNIT) PUNIT 
        , ITENS.PERCIPI 
        , DECODE(NVL(ITENS.PERICMGUIAPROPRIA, 0), 0, NVL(ITENS.PERCICM, 0), ITENS.PERICMGUIAPROPRIA) PERCICM 
        , ITENS.PERCST 
        , DECODE(NVL(ITENS.QT, 0), 0, ITENS.QTCONT, ITENS.QT) QT 
        , NVL(ITENS.QTCONT, 0) QTCONT 
        , ITENS.PERCBON 
        , ITENS.PERCDESC 
        , ITENS.NUMBONO 
        , ITENS.VLPAUTAICMS 
        , ITENS.PERCICMRED 
        , PCPRODUT.PRECOFIXO 
        , ITENS.PERCFRETE 
        , ITENS.PTABELA PBRUTO 
        , ITENS.PERCDESPFIN 
        , NVL(ITENS.PERCDESPADICIONAL, 0) PERCDESPADICIONAL 
        , NVL(ITENS.PERCFRETEFOB, 0) PERCFRETEFOB 
        , ITENS.VLBONIFIC 
        , ITENS.PERCOUTROSCUSTOS 
        , ITENS.QTESTGERANT 
        , ITENS.QTESTANT 
        , ITENS.CUSTOCONTANT 
        , NVL(ITENS.CUSTOREPANT, 0) CUSTOREPANT 
        , NVL(ITENS.VALORULTENTANT, 0) VALORULTENTANT 
        , NVL(ITENS.PERCOUTRASDESP, 0) PERCOUTRASDESP 
        , NVL(ITENS.PERCSEGURO, 0) PERCSEGURO 
        , NVL(ITENS.PERCDESPDENTRONF 
        , CASE WHEN(NVL(ITENS.PERCOUTRASDESP, 0) - NVL(ITENS.PERCSEGURO, 0)) > 0 
                    THEN(NVL(ITENS.PERCOUTRASDESP, 0) - NVL(ITENS.PERCSEGURO, 0)) 
                 ELSE 0 
              END) PERCDESPDENTRONF 
        , NVL(ITENS.VLSEGURO, 0) VLSEGURO 
        , NVL(ITENS.VLDESPDENTRONF 
        , CASE WHEN(NVL(ITENS.VLOUTRASDESP, 0) - NVL(ITENS.VLSEGURO, 0)) > 0 
                    THEN(NVL(ITENS.VLOUTRASDESP, 0) - NVL(ITENS.VLSEGURO, 0)) 
                 ELSE 0 
              END) VLDESPDENTRONF 
        , ITENS.CUSTOREP 
        , ITENS.CUSTOCONT 
        /*Custos para calculo da margem*/ 
        , DECODE(:REGFORAUFSEMST 
               , 'N', ITENS.CUSTOREAL 
               , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                      , 1, NVL(ITENS.CUSTOREAL, 0) 
                      , NVL(ITENS.CUSTOREALSEMST, NVL(ITENS.CUSTOREAL, 0)))) CUSTOREAL_MARGEM 
        , DECODE(:REGFORAUFSEMST 
               , 'N', ITENS.CUSTOFIN 
               , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                      , 1, NVL(ITENS.CUSTOFIN, 0) 
                      , NVL(COMPLEMENTO.CUSTOFINSEMST, NVL(ITENS.CUSTOFIN, 0)))) CUSTOFIN_MARGEM 
        , DECODE(:REGFORAUFSEMST 
               , 'N', ITENS.CUSTOULTENT 
               , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                      , 1, NVL(ITENS.CUSTOULTENT, 0) 
                      , NVL(COMPLEMENTO.CUSTOULTENTSEMST, NVL(ITENS.CUSTOULTENT, 0)))) CUSTOULTENT_MARGEM 
        , DECODE(:REGFORAUFSEMST 
               , 'N', NVL(PCITEM.CUSTOULTPEDCOMPRA, NVL(PCEST.CUSTOULTPEDCOMPRA, 0)) 
               , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                      , 1, NVL(PCITEM.CUSTOULTPEDCOMPRA, NVL(PCEST.CUSTOULTPEDCOMPRA, 0)) 
                      , NVL(NVL(PCITEM.CUSTOULTPEDCOMPRASEMST, PCEST.CUSTOULTPEDCOMPRASEMST) 
                          , NVL(PCITEM.CUSTOULTPEDCOMPRA, NVL(PCEST.CUSTOULTPEDCOMPRA, 0))))) CUSTOULTPEDCOMPRA 
        , DECODE(:REGFORAUFSEMST 
               , 'N', NVL(ITENS.CUSTOULTENTFIN, 0) 
               , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                      , 1, NVL(ITENS.CUSTOULTENTFIN, 0) 
                      , NVL(COMPLEMENTO.CUSTOULTENTFINSEMST, NVL(ITENS.CUSTOULTENTFIN, 0)))) CUSTOULTENTFIN_MARGEM 
        , DECODE(:REGFORAUFSEMST 
               , 'N', DECODE(:POLITICAFILIAL 
                           , 'P', NVL(PCPRODUT.CUSTOPROXIMACOMPRA, 0) 
                           , NVL(PCEST.CUSTOPROXIMACOMPRA, 0)) 
               , DECODE(:POLITICAFILIAL 
                      , 'P', DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                                  , 1, NVL(PCPRODUT.CUSTOPROXIMACOMPRA, 0) 
                                  , NVL(PCPRODUT.CUSTOPROXIMACOMPRASEMST 
                                      , NVL(PCPRODUT.CUSTOPROXIMACOMPRA, 0))) 
                      , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                             , 1, NVL(PCEST.CUSTOPROXIMACOMPRA, 0) 
                             , NVL(PCEST.CUSTOPROXIMACOMPRASEMST, NVL(PCEST.CUSTOPROXIMACOMPRA, 0))))) CUSTOPROXIMACOMPRA 
        , DECODE(:REGFORAUFSEMST 
               , 'N', DECODE(:POLITICAFILIAL 
                           , 'P', NVL(PCPRODUT.CUSTOFORNEC, 0) 
                           , NVL(PCEST.CUSTOFORNEC, 0)) 
               , DECODE(:POLITICAFILIAL 
                      , 'P', DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                                  , 1, NVL(PCPRODUT.CUSTOFORNEC, 0) 
                                  , NVL(PCPRODUT.CUSTOFORNECSEMST, NVL(PCPRODUT.CUSTOFORNEC, 0))) 
                      , DECODE(DECODE(PCFILIAL.UF, NVL(PCREGIAO.UF, PCFILIAL.UF), 1, 0) 
                             , 1, NVL(PCEST.CUSTOFORNEC, 0) 
                             , NVL(PCEST.CUSTOFORNECSEMST, NVL(PCEST.CUSTOFORNEC, 0))))) CUSTOFORNEC 
        /*Custos da movimentação*/ 
        , NVL(ITENS.CUSTOREAL, 0) CUSTOREAL 
        , NVL(ITENS.CUSTOFIN, 0) CUSTOFIN 
        , NVL(ITENS.CUSTOULTENT, 0) CUSTOULTENT 
        , NVL(ITENS.CUSTOULTENTFIN, 0) CUSTOULTENTFIN 
        , NVL(COMPLEMENTO.CUSTOULTENTLIQ, 0) CUSTOULTENTLIQ 
        , NVL(COMPLEMENTO.CUSTOREALLIQ, 0) CUSTOREALLIQ 
        /*Custos sem ST*/ 
        , ITENS.CUSTOREALSEMST 
        , COMPLEMENTO.CUSTOFINSEMST 
        , COMPLEMENTO.CUSTOULTENTSEMST 
        , COMPLEMENTO.CUSTOULTENTFINSEMST 
        /*Custos Anteriores*/ 
        , NVL(ITENS.CUSTOREALANT, 0) CUSTOREALANT 
        , NVL(ITENS.CUSTOFINANT, 0) CUSTOFINANT 
        , NVL(ITENS.CUSTOULTENTANT, 0) CUSTOULTENTANT 
        , NVL(ITENS.CUSTOULTENTFINANT, 0) CUSTOULTENTFINANT 
        , NVL(COMPLEMENTO.CUSTOREALLIQANT, 0) CUSTOREALLIQANT 
        /*Custos Anteriores sem ST*/ 
        , NVL(ITENS.CUSTOREALSEMSTANT, 0) CUSTOREALSEMSTANT 
        , NVL(COMPLEMENTO.CUSTOFINSEMSTANT, 0) CUSTOFINSEMSTANT 
        , NVL(COMPLEMENTO.CUSTOULTENTSEMSTANT, 0) CUSTOULTENTSEMSTANT 
        , NVL(COMPLEMENTO.CUSTOULTENTFINSEMSTANT, 0) CUSTOULTENTFINSEMSTANT 
        /*Custos da PCEST*/ 
        , PCEST.CUSTOREAL CUSTOREAL_EST 
        , PCEST.CUSTOFIN CUSTOFIN_EST 
        , PCEST.CUSTOULTENT CUSTOULTENT_EST 
        , PCEST.CUSTOULTENTFIN CUSTOULTENTFIN_EST 
        , NVL(PCITEM.CUSTOULTPEDCOMPRA, PCEST.CUSTOULTPEDCOMPRA) CUSTOULTPEDCOMPRA_EST 
        /*Custos da PCEST sem ST*/ 
        , PCEST.CUSTOREALSEMST CUSTOREALSEMST_EST 
        , PCEST.CUSTOFINSEMST CUSTOFINSEMST_EST 
        , PCEST.CUSTOULTENTSEMST CUSTOULTENTSEMST_EST 
        , PCEST.CUSTOULTENTFINSEMST CUSTOULTENTFINSEMST_EST 
        , NVL(PCITEM.CUSTOULTPEDCOMPRASEMST, PCEST.CUSTOULTPEDCOMPRASEMST) CUSTOULTPEDCOMPRASEMST_EST 
        , PCEST.VALORULTENT VALORULTENT_EST 
        , ITENS.VALORULTENT 
        , PCEST.CUSTOCONT CUSTOCONT_EST 
        , ITENS.PERICMSANTECIPADO 
        , NVL(ITENS.PERCALIQEXTGUIA, ITENS.ALIQICMS2) PERCALIQEXTGUIA 
        , NVL(ITENS.PERICMGUIAPROPRIA, 0) PERICMGUIAPROPRIA 
        , NVL(PCPRODFILIAL.PCOMREP1, PCPRODUT.PCOMREP1) PCOMREP1 
        , NVL(ITENS.QTCX, 0) QTCX 
        , NVL(ITENS.QTPECAS, 0) QTPECAS 
        , NVL(ITENS.PERCSUFRAMA, 0) PERCSUFRAMA 
        , NVL(ITENS.PRODBONIFICADO, 'N') PRODBONIFICADO 
        , NVL(PCEST.QTEST, 0) QTEST 
        , NVL(PCEST.QTESTGER, 0) QTESTGER 
        , NVL(PCEST.QTRESERV, 0) QTRESERV 
        , NVL(PCEST.QTINDENIZ, 0) QTINDENIZ 
        , NVL(PCEST.QTGIRODIA, 0) GIRODIA 
        , NVL(ITENS.PERCCREDICMPRESUMIDO, 0) PERCCREDICMPRESUMIDO 
        , PCPRODUT.CODFAB 
        , PCPRODUT.FRETEESPECIAL 
        , NVL(PCPRODUT.PESOBRUTO, 0) PESOBRUTO 
        , NVL(ITENS.CODFISCAL, 0) CODFISCALITEM 
        , NVL(PCPEDIDO.PALETIZADO, 'S') PALETIZADO 
        , NVL(PCPRODUT.TIPOESTOQUE, 'FR') TIPOESTOQUE 
        , ITENS.SITTRIBUT 
        , COMPLEMENTO.CODSITTRIBPISCOFINSNFSERVICO 
        , NVL(COMPLEMENTO.VLBASEPISCOFINSNFSERVICO, 0) VLBASEPISCOFINSNFSERVICO 
        , NVL(COMPLEMENTO.PERPISNFSERVICO, 0) PERPISNFSERVICO 
        , NVL(COMPLEMENTO.VLCREDPISNFSERVICO, 0) VLCREDPISNFSERVICO 
        , NVL(COMPLEMENTO.PERCOFINSNFSERVICO, 0) PERCOFINSNFSERVICO 
        , NVL(COMPLEMENTO.VLCREDCOFINSNFSERVICO, 0) VLCREDCOFINSNFSERVICO 
        , NVL(COMPLEMENTO.PERCNFSERVICO, 0) PERCNFSERVICO 
        , NVL(COMPLEMENTO.VLNFSERVICO, 0) VLNFSERVICO 
        , NVL(COMPLEMENTO.VLNFSERVICOPORKG, 0) VLNFSERVICOPORKG 
        , PCPRODUT.NBM 
        , PCREGIAO.NUMREGIAO 
        , DECODE(NVL(PCPRODUT.QTUNITCX, 0), 0, 1, PCPRODUT.QTUNITCX) QTUNITCX 
        , ITENS.PERCREDICMS 
        , PCPRODUT.CLASSIFICFISCAL 
        , NVL(ITENS.VLFRETECONHEC, 0) VLFRETECONHEC 
        , NVL(ITENS.VLOUTRASDESP, 0) VLOUTRASDESP 
        , NVL(ITENS.PERCDESPFORANF, 0) PERCDESPFORANF 
        , NVL(ITENS.VLDESPFORANF, 0) VLDESPFORANF 
        , NVL(ITENS.PERCDIFALIQUOTAS, 0) PERCDIFALIQUOTAS 
        , NVL(ITENS.VLDIFALIQUOTAS, 0) VLDIFALIQUOTAS 
        , NVL(ITENS.BASEDIFALIQUOTAS, 0) BASEDIFALIQUOTAS 
        , NVL(ITENS.PERCDESCFIN, 0) PERCDESCFIN 
        , ROUND(NVL(ITENS.PUNIT, 0) -(NVL(ITENS.PUNIT, 0) /(1 +(NVL(ITENS.PERCBON, 0) / 100))), 6) VLPERCBON 
        , ROUND(DECODE(NVL(ITENS.PUNIT, 0), 0, 0,((ITENS.VLBONIFIC / NVL(ITENS.PUNIT, 0)) * 100)), 6) PERCVLBONIFIC 
        , NVL(ITENS.PERCIMPPRODUTORURAL, 0) PERCIMPPRODUTORURAL 
        , NVL(PCTABPR.PFRETE, 0) PFRETE 
        , PCTABPR.DESCONTAFRETE 
        , 0 MARGEMATUAL 
        , PCTABPR.DTULTALTPVENDA 
        , NVL(PCTABPR.PTABELA, 0) PTABELA 
        , NVL(PCTABPR.PTABELAATAC, 0) PTABELAATAC 
        , NVL(PCTABPR.MARGEM, 0) MARGEM 
        , NVL(PCTABPR.PVENDA, 0) PVENDA 
        , NVL(PCTABPR.PVENDAATAC, 0) PVENDAATAC 
        , 0 MARGEMATAC 
        , 0 MARGEMATAC_ESP 
        , 0 FATORPRECO 
        , NVL(PCREGIAO.VLFRETEKG, 0) VLFRETEKG 
        , NVL(PCREGIAO.PERFRETEESPECIAL, 0) PERFRETEESPECIAL 
        , NVL(PCREGIAO.PERFRETETERCEIROS, 0) PERFRETETERCEIROS 
        , NVL(PCTRIBUT.PERDESCCUSTO, 0) PERDESCCUSTO 
        , NVL(PCTRIBUT.CODICMTAB, 0) CODICMTAB 
        , (  (NVL(ITENS.PUNIT, 0) -(NVL(ITENS.BASEICMS, 0) *(NVL(ITENS.PERCICM, 0) / 100))) 
           / (1 +(NVL(ITENS.PERCBON, 0) / 100))) VLTOTPUNIT 
        , NVL(ITENS.VLADUANEIRA, 0) VLADUANEIRA 
        , NVL(ITENS.VLSISCOMEX, 0) VLSISCOMEX 
        , NVL(ITENS.VLOUTRASDESPIMP, 0) VLOUTRASDESPIMP 
        , NVL(ITENS.VLICMSDIFERIDO, 0) VLICMSDIFERIDO 
        , NVL(ITENS.PERCICMSDIFERIDO, 0) PERCICMSDIFERIDO 
        , NVL(ITENS.PERCIISUSPENSO, 0) PERCIISUSPENSO 
        , NVL(ITENS.PERCDESCICMSDIF, 0) PERCDESCICMSDIF 
        , NVL(ITENS.VLDESCICMSDIF, 0) VLDESCICMSDIF 
        , NVL(ITENS.VLIMPORTACAO, 0) VLIMPORTACAO 
        , NVL(COMPLEMENTO.CUSTONFSEMSTGUIAULTENT, 0) CUSTONFSEMSTGUIAULTENT 
        , NVL(COMPLEMENTO.VLSTULTENTANT, 0) VLSTULTENTANT 
        , NVL(COMPLEMENTO.VLSTGUIAULTENTANT, 0) VLSTGUIAULTENTANT 
        , NVL(COMPLEMENTO.CUSTONFSEMSTGUIAULTENTANT, 0) CUSTONFSEMSTGUIAULTENTANT 
        , NVL(COMPLEMENTO.IVAULTENTANT, 0) IVAULTENTANT 
        , NVL(COMPLEMENTO.ALIQICMS1ULTENTANT, 0) ALIQICMS1ULTENTANT 
        , NVL(COMPLEMENTO.ALIQICMS2ULTENTANT, 0) ALIQICMS2ULTENTANT 
        , NVL(COMPLEMENTO.REDBASEIVAULTENTANT, 0) REDBASEIVAULTENTANT 
        , NVL(COMPLEMENTO.PERCICMSFRETEFOBSTULTENTANT, 0) PERCICMSFRETEFOBSTULTENTANT 
        , NVL(COMPLEMENTO.VLFRETECONHECULTENTANT, 0) VLFRETECONHECULTENTANT 
        , NVL(COMPLEMENTO.PERCALIQEXTGUIAULTENTANT, 0) PERCALIQEXTGUIAULTENTANT 
        , (CASE WHEN(NVL(PCPRODUT.SUGVENDA, 0) <= 0) 
                 THEN NVL(PCCONSUM.SUGVENDA, 3) 
              ELSE NVL(PCPRODUT.SUGVENDA, 0) 
           END) TSUGVENDA 
        , PCDEPTO.DESCRICAO DEPTO 
        , PCSECAO.DESCRICAO SECAO 
        , ITENS.VLSUFRAMA 
        , ITENS.VLDESCONTO 
        , (NVL(ITENS.PTABELA, 0) - NVL(ITENS.VLDESCONTO, 0) - NVL(ITENS.VLSUFRAMA, 0) - NVL(COMPLEMENTO.VLICMSDESONERACAO, 0)) 
AS PLIQUIDO 
        , ITENS.VLFRETE 
        , (NVL(ITENS.PUNIT, 0) *(NVL(ITENS.PERCDESPFIN, 0) / 100)) VLDESPFIN 
        , ITENS.VLDESPADICIONAL 
        , COMPLEMENTO.VLICMSANTECIPADO 
        , COMPLEMENTO.VLOUTROSCUSTOS 
        , ITENS.VLDESCFIN 
        , (NVL(ITENS.PUNIT, 0) *(NVL(ITENS.PERCIMPPRODUTORURAL, 0) / 100)) VLDESPFINPRODRUAL 
        , COMPLEMENTO.VLICMS 
        , ITENS.VLCREDPRESUMIDO 
        , COMPLEMENTO.PERCALTERCUSTOENT 
        , (NVL(ITENS.PUNIT, 0) *(NVL(COMPLEMENTO.PERCALTERCUSTOENT, 0) / 100)) VLACRESCCUSTOENT 
        , COMPLEMENTO.CUSTOULTENTCONT 
        , ITENS.CALCCREDIPI 
        , NVL(COMPLEMENTO.CONSIDERASTNFCUSTO, NVL(PCPRODFILIAL.CONSIDERASTNFCUSTO, 'S')) CONSIDERASTNFCUSTO 
        , NVL(COMPLEMENTO.CONSIDERASTGUIACUSTO, NVL(PCPRODFILIAL.CONSIDERASTGUIACUSTO, 'S')) CONSIDERASTGUIACUSTO 
        , NVL(COMPLEMENTO.CONSIDERASTNFCUSTOCONT, NVL(PCPRODFILIAL.CONSIDERASTNFCUSTOCONT, 'S')) CONSIDERASTNFCUSTOCONT 
        , NVL(COMPLEMENTO.CONSIDERASTGUIACUSTOCONT, NVL(PCPRODFILIAL.CONSIDERASTGUIACUSTOCONT, 'S')) CONSIDERASTGUIACUSTOCONT 
        , NVL(COMPLEMENTO.CONSIDERACREDSTFCPBCRCUSTOCONT, NVL(PCPRODFILIAL.CONSIDERACREDSTFCPBCRCUSTOCONT, 'N')) 
CONSIDERACREDSTFCPBCRCUSTOCONT 
        , NVL(COMPLEMENTO.CONSIDERACREDSTFCPBCRCUSTOGER, NVL(PCPRODFILIAL.CONSIDERACREDSTFCPBCRCUSTOGER, 'N')) 
CONSIDERACREDSTFCPBCRCUSTOGER 
        , NVL(COMPLEMENTO.CONSIDERACREDICMSBCRCUSTOCONT, NVL(PCPRODFILIAL.CONSIDERACREDICMSBCRCUSTOCONT, 'N')) 
CONSIDERACREDICMSBCRCUSTOCONT 
        , NVL(COMPLEMENTO.CONSIDERACREDICMSBCRCUSTOGER, NVL(PCPRODFILIAL.CONSIDERACREDICMSBCRCUSTOGER, 'N')) 
CONSIDERACREDICMSBCRCUSTOGER 
        , PCPRODUT.PRECOMAXCONSUM 
        , PCPRODUT.PRECOMAXCONSUMTAB 
        , NVL(PCTABPR.PERDESCMAX, 0) PERDESCMAX 
        , PCPRODUT.CLASSEVENDA 
        , PCPRODUT.CODAUXILIAR 
        , PCPRODUT.CODAUXILIAR2 
        , PCPRODUT.EMBALAGEMMASTER 
        , NVL(COMPLEMENTO.PERCICMSDESONERACAO, 0) PERCICMSDESONERACAO 
        , NVL(COMPLEMENTO.VLICMSDESONERACAO, 0) VLICMSDESONERACAO 
        , PCPRODUT.CLASSE 
        , ITENS.DTULTENTANT 
        , NVL(COMPLEMENTO.PERACRESCIMOFUNCEP, 0) PERACRESCIMOFUNCEP 
        , NVL(COMPLEMENTO.VLACRESCIMOFUNCEP, 0) VLACRESCIMOFUNCEP 
        , NVL(COMPLEMENTO.VLBASEFCPST, 0) VLBASEFCPST 
        , NVL(COMPLEMENTO.VLBASEFCPICMS, 0) VLBASEFCPICMS 
        , NVL(COMPLEMENTO.ALIQICMSFECP, 0) ALIQICMSFECP 
        , NVL(COMPLEMENTO.VLFECP, 0) VLFECP 
        , NVL(COMPLEMENTO.ALIQICMSFECPSTGUIA, 0) ALIQICMSFECPSTGUIA 
        , NVL(COMPLEMENTO.VLFECPSTGUIA, 0) VLFECPSTGUIA 
        , NVL(COMPLEMENTO.VLBASEPISCOFINSFRETEFOB, 0) VLBASEPISCOFINSFRETEFOB 
        , NVL(COMPLEMENTO.PERPISFRETEFOB, 0) PERPISFRETEFOB 
        , NVL(COMPLEMENTO.VLCREDPISFRETEFOB, 0) VLCREDPISFRETEFOB 
        , NVL(COMPLEMENTO.PERCOFINSFRETEFOB, 0) PERCOFINSFRETEFOB 
        , NVL(COMPLEMENTO.VLCREDCOFINSFRETEFOB, 0) VLCREDCOFINSFRETEFOB 
        , NVL(COMPLEMENTO.VLBASEICMSFRETEFOB, 0) VLBASEICMSFRETEFOB 
        , NVL(COMPLEMENTO.PERCICMSFRETEFOB, 0) PERCICMSFRETEFOB 
        , NVL(COMPLEMENTO.PERCICMSCUSTOFRETEFOB, 0) PERCICMSCUSTOFRETEFOB 
        , NVL(COMPLEMENTO.VLICMSFRETEFOB, 0) VLICMSFRETEFOB 
        , NVL(COMPLEMENTO.VLICMSCUSTOFRETEFOB, 0) VLICMSCUSTOFRETEFOB 
        , NVL(COMPLEMENTO.QTPERDA, 0) QTPERDA 
        , NVL(COMPLEMENTO.QTSOBRA, 0) QTSOBRA 
        , NVL(COMPLEMENTO.VLMATERIAPRIMA, 0) VLMATERIAPRIMA 
        , COMPLEMENTO.PESOBRUTOFRETE 
        , COMPLEMENTO.VLICMSCHEIO 
        , COMPLEMENTO.ORIGMERCTRIB 
        , NVL((SELECT PCROTULOITEM.DESCRICAO 
                 FROM PCROTULOITEM 
                WHERE PCROTULOITEM.ID = 'ORIGMERCTRIB' 
                  AND PCROTULOITEM.VALOR = COMPLEMENTO.ORIGMERCTRIB 
                  AND ROWNUM = 1) 
            , '') ORIGMERCTRIBDESCRICAO 
        , NVL(COMPLEMENTO.FATORENT,ITENS.QTUNITCX) FATORENT 
        , CASE WHEN NVL(PCPEDIDO.TIPOVERBAOUTRAS, 'D') = 'M' AND NVL(ITENS.VLBONIFICOUTRAS, 0) > 0 
                THEN NVL(ITENS.VLBONIFICOUTRAS, 0) 
             ELSE 0 
          END VLVERBAOUTRAS_CUSTO 
        , CASE WHEN NVL(PCPEDIDO.TIPOVERBAOUTRAS, 'D') = 'M' AND NVL(ITENS.PERCBONOUTRAS, 0) > 0 
                THEN NVL(ITENS.PERCBONOUTRAS, 0) 
             ELSE 0 
          END PERCBONOUTRAS_CUSTO 
        , ITENS.CODOPER CODOPER 
        , 0 PTABELAH 
        , 0 VLDESCONTOH 
        , 0 VLFRETEH 
        , 0 VLSEGUROH 
        , 0 VLDESPDENTRONFH 
        , 0 VLICMSH 
        , 0 VLCREDICMSH 
        , 0 VLCREDPISH 
        , 0 VLCREDCOFINSH 
        , 0 VLIPIH 
        , 0 STH 
        , 0 VLFECPH 
        , 0 VLDESPADICIONALH 
        , 0 VLSUFRAMAH 
        , 0 VLICMSDESONERACAOH 
        , 0 VLCREDPRESUMIDOH 
        , 0 VLICMSANTECIPADOH 
        , 0 VLDIFALIQUOTASH 
        , 0 VLSTOUTORGADOH 
        , 0 VLDESPFORANFH 
     FROM PCMOV ITENS 
        , PCPRODUT 
        , PCCONSUM 
        , PCEST 
        , PCDEPTO 
        , PCSECAO 
        , PCPEDIDO 
        , PCEMBALAGEM 
        , PCTABPR 
        , PCTRIBUT 
        , PCMOVCOMPLE COMPLEMENTO 
        , PCREGIAO 
        , PCFILIAL 
        , PCCOTACAOMOEDAI 
        , PCPRODFILIAL 
        , PCITEM 
    WHERE ITENS.CODPROD = PCPRODUT.CODPROD 
      AND ITENS.DTCANCEL IS NULL 
      AND ITENS.CODFILIAL = :CODFILIAL 
      AND ITENS.NUMTRANSENT = :NUMTRANSENT 
      AND ITENS.DTMOV BETWEEN (:DTENT -2) AND (:DTENT +2) 
      AND ITENS.CODFILIAL = PCFILIAL.CODIGO 
      AND ITENS.CODPROD = PCEST.CODPROD 
      AND ITENS.CODFILIAL = PCEST.CODFILIAL 
      AND ITENS.CODPROD = PCPRODFILIAL.CODPROD 
      AND ITENS.CODFILIAL = PCPRODFILIAL.CODFILIAL 
      AND ITENS.NUMTRANSITEM = COMPLEMENTO.NUMTRANSITEM(+) 
      AND PCPRODUT.CODEPTO = PCDEPTO.CODEPTO(+) 
      AND PCPRODUT.CODSEC = PCSECAO.CODSEC(+) 
      AND PCPRODUT.CODPROD = PCEMBALAGEM.CODPROD(+) 
      AND PCPRODUT.CODFILIAL = PCEMBALAGEM.CODFILIAL(+) 
      AND PCPRODUT.CODAUXILIAR = PCEMBALAGEM.CODAUXILIAR(+) 
      AND PCEMBALAGEM.QTUNIT(+) = 1 
      AND ITENS.NUMPED = PCPEDIDO.NUMPED(+) 
      AND ITENS.NUMPED = PCITEM.NUMPED(+) 
      AND ITENS.CODPROD = PCITEM.CODPROD(+) 
      AND ITENS.NUMSEQPED = PCITEM.NUMSEQ(+) 
      AND PCEST.DTULTENT = PCCOTACAOMOEDAI.DATACOTACAO(+) 
      AND PCCOTACAOMOEDAI.CODIGO(+) = :CODMOEDA 
      AND ITENS.CODPROD = PCTABPR.CODPROD(+) 
      AND PCTABPR.NUMREGIAO(+) = :NUMREGIAOPADRAO 
      AND PCTABPR.NUMREGIAO = PCREGIAO.NUMREGIAO(+)  
      AND PCTRIBUT.CODST = CASE WHEN (:USATRIBUTACAOVENDA <> 'S') 
                                THEN PCTABPR.CODST 
                                ELSE NVL((SELECT PCTABTRIB.CODST 
                                            FROM PCTABTRIB 
                                           WHERE PCTABTRIB.UFDESTINO = PCREGIAO.UF 
                                             AND PCTABTRIB.CODFILIALNF = ITENS.CODFILIAL 
                                             AND PCTABTRIB.CODPROD = ITENS.CODPROD), 0) END 
 ORDER BY NUMTRANSENT,NUMPED,ITENS.DESCRICAO,ITENS.CODPROD
REGFORAUFSEMST = 'N'
POLITICAFILIAL = 'P'
CODFILIAL = '2'
NUMTRANSENT = 224929
DTENT = '02/01/2024'
CODMOEDA = 0
NUMREGIAOPADRAO = 1
USATRIBUTACAOVENDA = 'N'
----------------------------------
Timestamp: 16:21:38.598
SELECT PCLANC.RECNUM
     , PCLANC.DTLANC
     , PCLANC.HISTORICO
     , PCLANC.HISTORICO2
     , NVL(PCLANC.VALOR,0) VALOR
     , PCLANC.DTDESD
     , CASE WHEN PCLANC.DTDESD IS NULL THEN NVL(PCLANC.VALOR,0) ELSE 0 END VLTITULO          
     , PCLANC.CODFORNEC
     , PCLANC.NUMTRANSENT
     , PCLANC.DTVENC
     , PCLANC.DTPAGTO
     , NVL(PCLANC.VPAGO,0) VPAGO
     , PCLANC.CODCONTA
     , PCLANC.NUMNOTA
     , PCLANC.DUPLIC
     , PCLANC.INDICE
     , PCFORNEC.FORNECEDOR
     , NVL(PCLANC.DESCONTOFIN,0) DESCONTOFIN
     , PCLANC.NUMNEGOCIACAO
     , NVL(PCLANC.BOLETO, 'N') BOLETO
     , (PCLANC.DTVENC - PCLANC.DTLANC) NUMDIAS
  FROM PCLANC
     , PCFORNEC
     , PCCONSUM
     , PCFILIAL
 WHERE PCLANC.CODFORNEC   = PCFORNEC.CODFORNEC (+)
   AND PCLANC.CODFILIAL   = PCFILIAL.CODIGO
   AND PCLANC.NUMTRANSENT = :NUMTRANSENT
   AND NVL(PCLANC.CODROTINABAIXA,0) NOT IN (1302,1327)
   AND PCLANC.VALOR > 0  
   AND NOT EXISTS (SELECT 1 FROM PCDESDLANC WHERE PCDESDLANC.RECNUMDESTINO = PCLANC.RECNUM AND PCDESDLANC.NUMTRANSENT = 
PCLANC.NUMTRANSENT)
   AND PCLANC.VALOR IS NOT NULL
     AND PCLANC.CODCONTA NOT IN (NVL(PCCONSUM.CODCONTFRE,0), NVL(PARAMFILIAL.obtercomonumber('CODCONTSERV'),0) , 
NVL(PCCONSUM.CODCONTAREBAIXACUSTO,0), NVL(PCFILIAL.CODCONTAPERCACRESCENT,0))
 ORDER
    BY PCLANC.CODCONTA
     , PCLANC.DTVENC
     , PCLANC.RECNUM
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.669
SELECT PCNFENT.NUMTRANSENT
     , PCNFENT.NUMTRANSENT NUMTRANSENTORIGEM
     , PCNFENT.NUMNOTA
     , PCNFENT.SERIE
     , PCNFENT.ESPECIE
     , NVL(PCNFENT.VLTOTAL, 0) VLTOTAL
     , PCNFENT.CODFISCAL
     , PCNFENT.CODFILIAL
     , NVL(PCNFENT.VLIPI, 0) VLIPI
     , NVL(PCNFENT.VLBASEIPI, 0) VLBASEIPI
     , NVL(PCNFENT.VLFRETE, 0) VLFRETE
     , NVL(PCNFENT.VLST, 0) VLST
     , NVL(PCNFENT.VLDESCONTO, 0) VLDESCONTO
     , PCNFENT.DTEMISSAO
     , PCNFENT.CODCONT
     , PCNFENT.DTENT
     , PCNFENT.OBS
     , PCNFENT.OBS1
     , PCNFENT.OBS2
     , PCNFENT.NUMBONUS
     , PCNFENT.TIPODESCARGA
     , PCNFENT.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , PCNFENT.NUMVOL
     , NVL(PCNFENT.TOTPESO, 0) TOTPESO
     , PCNFENT.PERPIS
     , PCNFENT.PERCOFINS
     , DECODE(PCNFENT.ESPECIE, 'NS', 'Serviço', 'CT', 'Conhec. de Frete', PCNFENT.ESPECIE) TIPO_REGISTRO     
  FROM PCNFENT
     , PCFORNEC
 WHERE (PCNFENT.CODCONT = PCNFENT.CODCONTFRE
     OR PCNFENT.CODCONT    = PCNFENT.CODCONTSERV)
   AND PCNFENT.CODFORNEC = PCFORNEC.CODFORNEC
   AND PCNFENT.CODFILIAL = :CODFILIAL
   AND PCNFENT.VLTOTAL > 0
   AND PCNFENT.DTCANCEL IS NULL
   AND PCNFENT.VLTOTAL IS NOT NULL
   AND PCNFENT.NUMTRANSENT IN(SELECT NUMTRANSENT
                                FROM PCNFENT
                               WHERE NUMTRANSENT = :NUMTRANSENT
                                 AND PCNFENT.DTCANCEL IS NULL
                              UNION
                              SELECT NUMTRANSENT
                                FROM PCNFENTFRETE
                               WHERE NUMTRANSENTNF = :NUMTRANSENT)
CODFILIAL = '2'
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.749
SELECT PCNFBASE.NUMTRANSENT
     , NVL(PCNFBASE.ALIQUOTA,0) ALIQUOTA
     , NVL(PCNFBASE.VLBASE,0) VLBASE
     , NVL(PCNFBASE.VLICMS,0) VLICMS
     , PCNFBASE.CODCONT
     , NVL(PCNFBASE.PERCREDICMSCUSTO,0) PERCREDICMSCUSTO
  FROM PCNFBASE
     , PCNFENT
 WHERE PCNFBASE.NUMTRANSENT = PCNFENT.NUMTRANSENT
   AND PCNFBASE.CODCONT     = PCNFENT.CODCONT
   AND PCNFENT.TIPODESCARGA <> 'S'
   AND PCNFBASE.NUMTRANSENT = :NUMTRANSENT
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.780
SELECT PCNFENT.NUMTRANSENT
     , PCNFENT.NUMNOTA
     , PCNFENT.SERIE
     , PCNFENT.ESPECIE
     , NVL(PCNFENT.VLTOTAL,0) VLTOTAL
     , PCNFENT.CODFISCAL
     , PCNFENT.CODFILIAL
     , NVL(PCNFENT.VLIPI,0) VLIPI
     , NVL(PCNFENT.VLBASEIPI,0) VLBASEIPI
     , NVL(PCNFENT.VLFRETE,0) VLFRETE
     , NVL(PCNFENT.VLST,0) VLST
     , NVL(PCNFENT.VLDESCONTO,0) VLDESCONTO
     , PCNFENT.DTEMISSAO
     , PCNFENT.CODCONT
     , PCNFENT.DTENT
     , PCNFENT.OBS
     , PCNFENT.NUMBONUS
     , PCNFENT.TIPODESCARGA
     , PCNFENT.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , PCNFENT.NUMVOL
     , NVL(PCNFENT.TOTPESO,0) TOTPESO
  FROM PCNFENT
     , PCFORNEC
     , PCCONSUM
 WHERE PCNFENT.CODCONT     = PCCONSUM.CODCONTOUT
   AND PCNFENT.CODFORNEC   = PCFORNEC.CODFORNEC
   AND NVL(PCNFENT.VLTOTAL,0) > 0
   AND PCNFENT.DTCANCEL IS NULL
   AND PCNFENT.NUMTRANSENT = :NUMTRANSENT
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.834
SELECT   PCESTFILIALDEPOSITO.NUMTRANSENT
       , PCESTFILIALDEPOSITO.CODPROD
       , PCESTFILIALDEPOSITO.CODFILIAL
       , PCESTFILIALDEPOSITO.QTEST
       , PCESTFILIALDEPOSITO.QTESTGER
    FROM PCESTFILIALDEPOSITO
   WHERE PCESTFILIALDEPOSITO.NUMTRANSENT = :NUMTRANSENT
ORDER BY PCESTFILIALDEPOSITO.CODPROD
       , PCESTFILIALDEPOSITO.CODFILIAL
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.862
SELECT PCVERBA.NUMVERBA
     , PCVERBA.NUMPED
     , PCVERBA.NUMTRANSENT
     , PCVERBA.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , PCVERBA.DTEMISSAO
     , PCVERBA.DTVENC     
     , PCVERBA.ORIGEM
     , PCVERBA.VALOR
     , SUM(DECODE(PCMOVCRFOR.TIPO, 'D', PCMOVCRFOR.VALOR, 0)
         - DECODE(PCMOVCRFOR.TIPO, 'C', PCMOVCRFOR.VALOR, 0)) SALDO
  FROM PCVERBA
     , PCMOVCRFOR
     , PCMOV
     , PCFORNEC
 WHERE 
 /*
 ((PCVERBA.NUMPED      = PCMOV.NUMPED)
    OR  (PCVERBA.NUMTRANSENT = PCMOV.NUMTRANSENT)
    OR  (PCVERBA.NUMPED      IN (SELECT PCPEDVERBA.NUMPED 
                                   FROM PCPEDVERBA
                                  WHERE PCPEDVERBA.NUMPED = PCMOV.NUMPED)))
*/
   PCVERBA.NUMTRANSENT = PCMOV.NUMTRANSENT                                  
   AND PCVERBA.NUMVERBA  = PCMOVCRFOR.NUMVERBA
   AND PCMOV.NUMPED IS NOT NULL
   AND PCVERBA.VALOR > 0
   AND PCVERBA.DTCANCEL IS NULL
   AND PCVERBA.CODFORNEC = PCFORNEC.CODFORNEC
   AND PCMOV.NUMTRANSENT = :NUMTRANSENT
 GROUP
    BY PCVERBA.NUMVERBA
     , PCVERBA.NUMPED
     , PCVERBA.NUMTRANSENT
     , PCVERBA.CODFORNEC
     , PCFORNEC.FORNECEDOR
     , PCVERBA.DTEMISSAO
     , PCVERBA.DTVENC     
     , PCVERBA.ORIGEM
     , PCVERBA.VALOR
 ORDER
    BY PCVERBA.NUMVERBA
     , PCVERBA.DTEMISSAO
NUMTRANSENT = 224929
----------------------------------
Timestamp: 16:21:38.933
SELECT PCENTVEICULO.CODENTVEICULO
     , PCENTVEICULO.DATA
     , PCENTVEICULO.PLACA
     , PCENTVEICULO.UF
     , PCENTVEICULO.CODFUNCLANC
     , PCEMPR.NOME
     , PCENTVEICULO.CODFORNECTRANSP
     , PCFORNEC.FORNECEDOR TRANSPORTADORA
     , PCENTVEICULO.NOMEMOTORISTA
     , PCENTVEICULO.TIPOVEICULO      
     , PCENTVEICULO.DTCADASTRO      
  FROM PCENTVEICULO
     , PCFORNEC
     , PCEMPR
 WHERE PCENTVEICULO.CODFORNECTRANSP = PCFORNEC.CODFORNEC (+)
   AND PCENTVEICULO.CODFUNCLANC     = PCEMPR.MATRICULA   (+)
   AND PCENTVEICULO.CODENTVEICULO   = :CODENTVEICULO
CODENTVEICULO = 7705
----------------------------------
Timestamp: 16:21:38.971
SELECT PCMOVCRFOR.NUMTRANSCRFOR
     , PCMOVCRFOR.CODFILIAL
     , PCMOVCRFOR.DATA
     , PCMOVCRFOR.CODFORNEC
     , PCMOVCRFOR.TIPOVERBA
     , PCMOVCRFOR.VALOR
     , PCMOVCRFOR.TIPO
     , PCMOVCRFOR.HISTORICO1
     , PCMOVCRFOR.HISTORICO2
     , PCMOVCRFOR.HISTORICO3
     , PCMOVCRFOR.HISTORICO4
     , PCMOVCRFOR.NUMVERBA
     , PCMOVCRFOR.NUMPEDIDO
     , PCMOVCRFOR.VLSALDO
     , PCMOVCRFOR.HORA
     , PCMOVCRFOR.MINUTO
     , PCMOVCRFOR.CODFUNC
     , PCMOVCRFOR.DTCONCIL
     , PCMOVCRFOR.CONCILIACAO
     , PCMOVCRFOR.DTESTORNO
     , PCMOVCRFOR.NUMTRANSEST
     , PCMOVCRFOR.VLSALDOCONCIL
     , PCMOVCRFOR.SALDOTMP
     , PCMOVCRFOR.CODBANCOBAIXA
     , PCMOVCRFOR.CODMOEDABAIXA
     , PCMOVCRFOR.NUMLANC
     , PCMOVCRFOR.NUMTRANSENTDEVFORNEC
     , PCMOVCRFOR.NUMTRANSENT
     , PCMOVCRFOR.CODCONTA
     , PCMOVCRFOR.ROTINALANC
     , PCMOVCRFOR.CODFUNCCAN
     , PCMOVCRFOR.CODTIPOVERBA
     , PCMOVCRFOR.ORIGEM
     , PCMOVCRFOR.DTCOMPETENCIA
     , PCMOVCRFOR.DTPAGO
     , PCMOVCRFOR.LANCAVULSO
     , PCMOVCRFOR.CODFORNECPRINC
     , PCMOVCRFOR.EQUIPLANC
     , PCMOVCRFOR.FUNCLANC
     , PCMOVCRFOR.ROTINACAD
  FROM PCMOVCRFOR
  WHERE PCMOVCRFOR.NUMTRANSENT = :NUMTRANSENT
  AND PCMOVCRFOR.VALOR > 0
  AND PCMOVCRFOR.TIPO = 'C'
  AND NVL(PCMOVCRFOR.LANCAVULSO, 'N') = 'S'
NUMTRANSENT = 224929